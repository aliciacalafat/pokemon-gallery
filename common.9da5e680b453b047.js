"use strict";(self.webpackChunkpoke_gallery=self.webpackChunkpoke_gallery||[]).push([[76],{8715:(f,c,n)=>{n.d(c,{x:()=>_});var a=n(467),p=n(3953);let _=(()=>{class r{constructor(){this.apiUrl="https://pokeapi.co/api/v2"}getPokemonList(){var e=this;return(0,a.A)(function*(){try{console.log("Fetching Pok\xe9mon list...");const o=yield fetch(`${e.apiUrl}/pokemon?limit=20`);if(!o.ok)throw new Error("Network response was not ok");const t=yield o.json();console.log("Pok\xe9mon list fetched:",t);const s=t.results.map(function(){var h=(0,a.A)(function*(l){const i=yield(yield fetch(l.url)).json();return{name:e.capitalize(l.name),image:i.sprites.front_default,types:i.types.map(u=>u.type.name)}});return function(l){return h.apply(this,arguments)}}());return Promise.all(s)}catch(o){throw console.error("Fetch error:",o),o}})()}getPokemonDetails(e){var o=this;return(0,a.A)(function*(){try{console.log(`Fetching details for Pok\xe9mon: ${e}...`);const t=yield fetch(`${o.apiUrl}/pokemon/${e.toLowerCase()}`);if(!t.ok)throw new Error("Network response was not ok");const s=yield t.json();return console.log(`Details for Pok\xe9mon ${e} fetched:`,s),s}catch(t){throw console.error("Fetch error:",t),t}})()}capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}static#e=this.\u0275fac=function(o){return new(o||r)};static#o=this.\u0275prov=p.jDH({token:r,factory:r.\u0275fac,providedIn:"root"})}return r})()}}]);